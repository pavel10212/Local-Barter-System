datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  userId         String   @id @default(auto()) @map("_id") @db.ObjectId
  email          String   @unique
  password       String
  firstName      String?
  lastName       String?
  profileImageId String?  @db.ObjectId
  address        String?
  phoneNumber    String?
  items          Item[]
  barters        Barter[]
}

model Item {
  itemId      String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  image       String?
  itemOwner   User     @relation(fields: [userId], references: [userId])
  userId      String   @db.ObjectId
  barters     Barter[] @relation("ItemToBarter")
}

model Barter {
  barterId     String  @id @default(auto()) @map("_id") @db.ObjectId
  itemOwner    User    @relation(fields: [userId], references: [userId])
  userId       String  @db.ObjectId
  itemOffered  Item    @relation("ItemToBarter", fields: [itemId], references: [itemId], onDelete: Cascade)
  itemId       String  @db.ObjectId
  counterOffer String?
  itemSeeking  String
  status       String
}

model Image {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  filename    String
  contentType String
  uploadDate  DateTime @default(now())
}

// Statuses
// Created
// CounterOffered
// Accepted
// Rejected
