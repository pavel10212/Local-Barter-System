datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  userId         String   @id @default(auto()) @map("_id") @db.ObjectId
  email          String   @unique
  password       String
  firstName      String?
  lastName       String?
  profileImageId String?  @db.ObjectId
  address        String?
  phoneNumber    String?
  items          Item[]
  barters        Barter[] @relation("BarterOwner")
  counterOffers  Barter[] @relation("CounterOfferUser")
}

model Item {
  itemId             String   @id @default(auto()) @map("_id") @db.ObjectId
  name               String
  description        String
  image              String?
  itemOwner          User     @relation(fields: [userId], references: [userId])
  userId             String   @db.ObjectId
  barteredItem       Barter[] @relation("ItemToBarter")
  counterOfferedItem Barter[] @relation("CounterOfferItem")
}

model Barter {
  barterId             String  @id @default(auto()) @map("_id") @db.ObjectId
  barterOwner          User    @relation("BarterOwner", fields: [userId], references: [userId])
  userId               String  @db.ObjectId
  itemOffered          Item    @relation("ItemToBarter", fields: [itemId], references: [itemId], onDelete: Cascade)
  itemId               String  @db.ObjectId
  description          String?
  counterOfferedItem   Item?   @relation("CounterOfferItem", fields: [counterOfferedItemId], references: [itemId])
  counterOfferedItemId String? @db.ObjectId
  counterOfferUser     User?   @relation("CounterOfferUser", fields: [counterOfferUserId], references: [userId])
  counterOfferUserId   String? @db.ObjectId
  itemSeeking          String
  status               String
}
